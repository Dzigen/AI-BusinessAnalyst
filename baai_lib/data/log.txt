BAResponse(ba_text='Привет! Я твой AI Бизнес Аналитик.')
BAResponse(ba_text='Начинаю уточнять информацию по вашей предметной области')
BAResponse(ba_text='Можете описать основные цели вашего бизнеса или подразделения, которые будут решаться в рамках данного проекта?')
UserResponse(user_text='Разрабатываем веб-сервис для автоматизации управления заказами в интернет- магазине экопродуктов.', signal=None)
BAResponse(ba_text='Можете уточнить, какие именно задачи по управлению заказами вы хотите автоматизировать? Например, прием заказов, их обработку, доставку, возврат товаров или что-то другое?')
UserResponse(user_text='Приём, обработка и отслеживание заказов, инвентаризация, уведомления клиентов.', signal=None)
BAResponse(ba_text='Можете подробнее рассказать о процессе обработки заказа? Какие этапы он включает и кто участвует в этом процессе со стороны вашей компании?')
UserResponse(user_text='Я не знаю. У нас в компании ещё нет этого тех. процесса. Мы сейчас его прорабатываем с нуля.  Что можете посоветовать: какие этапы стоит включить?', signal=None)
BAResponse(ba_text='Какие категории сотрудников вашей компании предположительно будут участвовать в обработке заказов и каковы предполагаемые роли каждого из них в новом техническом процессе?')
UserResponse(user_text='Предусматриваются следующие роли: Клиент (просмотр, заказ). Менеджер (обработка заказов). Админ (настройки системы).', signal=None)
BAResponse(ba_text='Какие действия должен выполнять менеджер при обработке заказа? Например, подтверждение наличия товара, формирование накладной, передача информации службе доставки и т.д.?')
UserResponse(user_text='(1) Автоматическое уведомление при изменении статуса. (2) Выгрузка отчёта в Excel. (3) Настройки системы (4) управление пользователями (5) интеграции.', signal=None)
BAResponse(ba_text='Какие конкретные статусы могут принимать заказы в вашем сервисе и какие события инициируют переходы между этими статусами?')
UserResponse(user_text='Мы пока не знаем. В рамках проекта этот момент потребуется проработать. Такая функциональнасть нам точно нужна.', signal=None)
BAResponse(ba_text='Какие внешние сервисы или системы планируется интегрировать с вашим новым сервисом управления заказами? Например, службы доставки, платежные шлюзы, складские учетные программы и другие возможные интеграционные точки.')
UserResponse(user_text='Да: 1С (склад). ТГ-бот (оповещения). Платёжный шлюз (Сбербанк/ЮKassa).', signal=None)
BAResponse(ba_text='Какие данные должны передаваться между системой управления заказами и внешними сервисами (например, 1С, Телеграм-бот, платёжный шлюз)? Как часто должна происходить синхронизация этих данных и каким образом она будет инициироваться?')
UserResponse(user_text='Мы ожидаем следующую загруженность веб-сервиса: ~500 заказов/день, до 50 одновременных пользователей (менеджеры). Будут задействованы следующие объёмы данных: ~1000 товаров, ~500 заказов/день.', signal=None)
BAResponse(ba_text='Какие критерии используются для определения приоритета обработки заказов менеджерами? Есть ли особые условия или правила, согласно которым некоторые заказы обрабатываются быстрее других?')
UserResponse(user_text='Мы пока не знаем. В рамках проекта этот момент потребуется проработать. Такая функциональнасть нам точно нужна.', signal=None)
BAResponse(ba_text='Какие типы уведомлений клиентам и сотрудникам предполагается реализовать через Telegram-бота? Например, уведомления об изменении статуса заказа, напоминания о необходимости подтверждения оплаты, сообщения о поступлении нового товара и т.п.?')
UserResponse(user_text='Только уведомление о статусе заказа', signal=None)
BAResponse(ba_text='Какие дополнительные параметры заказа (помимо стандартных таких как дата, время, сумма, адрес доставки), важно учитывать вашему бизнесу для эффективной работы сервиса управления заказами? Например, пожелания клиента по доставке, комментарии менеджера, информация о скидках и акциях и т.д.')
UserResponse(user_text='(1) Отзывы/рейтинги товаров', signal=None)
BAResponse(ba_text='Завершаем уточнение предметной области проекта.')
BAResponse(ba_text='Ищем user-истории в вашем варианте описания предметной области.')
BAResponse(ba_text='В вашем описании предметной области было найдено 14 user-историй.')
BAResponse(ba_text='Начнём уточнять возможные сценарии по каждой user-истории.')
BAResponse(ba_text='Сейчас будем уточнять сценарии для user-истории 0: Клиент просматривает товары на сайте интернет-магазина экопродуктов.')
BAResponse(ba_text='Клиент просматривает товары на сайте интернет-магазина экопродуктов, добавляет товар в корзину, оформляет заказ. После оформления заказа клиент получает уведомление через Telegram-бот о том, что заказ принят в работу. Далее менеджер подтверждает наличие товара и формирует накладную. Заказ переходит в статус "Готовится к отправке". Клиент снова получает уведомление через Telegram-бот о текущем статусе своего заказа. Когда заказ отправляется службой доставки, статус меняется на "Отправлен", и клиент получает финальное уведомление с информацией о трек-коде для отслеживания посылки.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Клиент просматривает товары на сайте интернет-магазина экопродуктов, добавляет товар в корзину, оформляет заказ. После оформления заказа клиент получает уведомление через Telegram-бот о том, что заказ принят в работу. Далее менеджер подтверждает наличие товара и формирует накладную. Заказ переходит в статус "Готовится к отправке". Клиент снова получает уведомление об обновленном статусе заказа. Затем служба доставки информирует систему о получении заказа, после чего статус меняется на "Отправлен", а клиент вновь уведомляется через Telegram-бот. По завершении доставки клиент может оставить отзыв и рейтинг товара прямо на сайте магазина.')
UserResponse(user_text='Нет', signal=None)
BAResponse(ba_text='Клиент просматривает товары на сайте интернет-магазина экопродуктов, добавляет понравившиеся товары в корзину, оформляет заказ, получает уведомление о подтверждении заказа через Telegram-бот, после чего может отслеживать изменения статуса своего заказа также через Telegram-бот. После получения заказа клиент оставляет отзыв и рейтинг товара на сайте магазина.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Клиент просматривает товары на сайте интернет-магазина экопродуктов, добавляет товар в корзину, оформляет заказ. После оформления заказа клиент получает уведомление через Telegram-бот о том, что заказ принят в работу. Далее менеджер подтверждает наличие товара и формирует накладную. Затем клиенту отправляется уведомление о подтверждении заказа и готовности к отправке. Если товар отсутствует на складе, система автоматически информирует клиента о задержке и предлагает альтернативу. По завершении доставки клиент может оставить отзыв и рейтинг товара прямо на сайте магазина.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Клиент просматривает товары на сайте интернет-магазина экопродуктов, добавляет товар в корзину, оформляет заказ. После оформления заказа клиент получает уведомление через Telegram-бот о том, что заказ принят в работу. Далее менеджер подтверждает наличие товара и формирует накладную. Заказ переходит в статус "Готовится к отправке". Клиент снова получает уведомление через Telegram-бот о смене статуса заказа. Затем служба доставки информирует систему о получении заказа, после чего заказ переводится в статус "Отправлен" и клиент получает финальное уведомление о начале доставки.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Клиент просматривает товары на сайте интернет-магазина экопродуктов, добавляет товар в корзину, оформляет заказ. После оформления заказа клиент получает уведомление через Telegram-бот о том, что заказ принят в работу. Далее менеджер подтверждает наличие товара и формирует накладную. Заказ переходит в статус "Готовится к отправке". Клиенту отправляется уведомление о смене статуса заказа. Затем служба доставки информирует систему о получении заказа, после чего статус меняется на "Отправлен". Клиент снова получает уведомление о новой стадии заказа. По завершении доставки клиенту предлагается оставить отзыв о товаре и поставленной услуге прямо на сайте магазина.')
UserResponse(user_text=None, signal=<ResponseSignal.continue_operation: 1>)
BAResponse(ba_text='Сейчас будем уточнять сценарии для user-истории 1: Клиент оформляет заказ на покупку товаров.')
BAResponse(ba_text='Клиент оформляет заказ на покупку товаров и оставляет отзыв о товаре после получения заказа. Данный отзыв отображается в карточке товара и учитывается при расчете рейтинга товара. Менеджер может просматривать отзывы и рейтинги товаров в системе для принятия решений относительно ассортимента магазина.')
UserResponse(user_text='ДА', signal=None)
BAResponse(ba_text='Клиент оформил заказ на сайте магазина экопродуктов. После оформления заказа автоматически отправляется запрос в систему 1С для проверки наличия товара на складе. Если товар есть в наличии, то заказ получает статус "Подтверждён". Далее клиент получает уведомление через Telegram-бот о подтверждении заказа. Одновременно менеджер видит новый заказ в системе и может приступить к дальнейшей обработке — формированию накладной и передаче информации службе доставки. Если же товара нет в наличии, заказ получает статус "Ожидает поступления", а клиенту приходит соответствующее уведомление с предложением альтернативных вариантов.')
UserResponse(user_text=None, signal=<ResponseSignal.continue_operation: 1>)
BAResponse(ba_text='Сейчас будем уточнять сценарии для user-истории 2: Менеджер подтверждает наличие товара после оформления заказа клиентом.')
BAResponse(ba_text='Клиент оформляет заказ на сайте интернет-магазина. После получения заказа система автоматически отправляет запрос менеджеру на подтверждение наличия товара. Если товар есть в наличии, менеджер изменяет статус заказа на "Товар подтвержден". Система автоматически уведомляет клиента о подтверждении заказа через Telegram-бот. Если товара нет в наличии, менеджер информирует клиента о задержке или предлагает альтернативу.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Клиент оформляет заказ на сайте интернет-магазина экопродуктов. После получения заказа система автоматически отправляет запрос менеджеру на подтверждение наличия всех позиций заказа. Если товар есть в наличии, менеджер изменяет статус заказа на "Подтверждено". Система автоматически формирует уведомление клиенту через Telegram-бот о том, что его заказ подтвержден и ожидает отправки. Если какой-либо товар отсутствует, менеджер связывается с клиентом для согласования дальнейших действий (замена позиции, ожидание поступления товара или отмена заказа).')
UserResponse(user_text=None, signal=<ResponseSignal.continue_operation: 1>)
BAResponse(ba_text='Сейчас будем уточнять сценарии для user-истории 3: Менеджер формирует накладную на товар после подтверждения наличия.')
BAResponse(ba_text='Менеджер получает уведомление о подтверждении наличия всех позиций заказа. После проверки корректности указанных данных, менеджер вручную подтверждает наличие и автоматически формируется накладная на товар. Заказ переходит в следующий статус "Ожидает отправки". Клиенту отправляется уведомление о том, что его заказ подтвержден и ожидает отправки.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Менеджер получает уведомление о подтверждении наличия всех позиций заказа в системе 1С. После чего он вручную создает накладную на основе подтвержденных данных о наличии товаров и передает её в службу доставки. Одновременно клиенту отправляется уведомление через Telegram-бот о том, что его заказ сформирован и передан в службу доставки.')
UserResponse(user_text=None, signal=<ResponseSignal.continue_operation: 1>)
BAResponse(ba_text='Сейчас будем уточнять сценарии для user-истории 4: Менеджер передает информацию службе доставки после формирования накладной.')
BAResponse(ba_text='После того, как менеджер подтвердил наличие всех товаров в заказе и сформировал накладную, система автоматически отправляет запрос в службу доставки с указанием адреса получателя, списка товаров и желаемой даты доставки. После получения подтверждения службой доставки, статус заказа обновляется на "Передан в доставку", а клиент получает соответствующее уведомление через Telegram-бот.')
UserResponse(user_text='ДА', signal=None)
BAResponse(ba_text='После того, как менеджер подтвердил наличие всех товаров в заказе и сформировал накладную, система автоматически отправляет запрос в службу доставки с указанием адреса получателя, списка товаров и желаемой даты доставки. После получения подтверждения службой доставки, статус заказа обновляется на "Передан в доставку", а клиент получает соответствующее уведомление через Telegram-бот.')
UserResponse(user_text=None, signal=<ResponseSignal.next_stage: 0>)
BAResponse(ba_text='Извлекаем роли.')
BAResponse(ba_text='В вашем описании предметной области было найдено 7 ролей.')
BAResponse(ba_text='Извлекаю функциональные требования')


=======================================

BAResponse(ba_text='Привет! Я твой AI Бизнес Аналитик.')
BAResponse(ba_text='Начинаю уточнять информацию по вашей предметной области')
BAResponse(ba_text='Можете описать основные цели вашего бизнеса или подразделения, которые будут достигнуты после реализации данного проекта?')
UserResponse(user_text='Разрабатываем веб-сервис для автоматизации управления заказами в интернет- магазине экопродуктов.', signal=None)
BAResponse(ba_text='Можете уточнить, какие именно процессы по управлению заказами вы планируете автоматизировать? Например, прием заказов, их обработку, логистику доставки, взаимодействие с клиентами или что-то другое?')
UserResponse(user_text='Приём, обработка и отслеживание заказов, инвентаризация, уведомления клиентов.', signal=None)
BAResponse(ba_text='Можете подробнее рассказать о процессе инвентаризации товаров в вашем интернет-магазине? Как часто она проводится сейчас, кто участвует в этом процессе и каковы его текущие проблемы, которые нужно решить через проект?')
UserResponse(user_text=None, signal=<ResponseSignal.next_stage: 0>)
BAResponse(ba_text='Ищем user-истории в вашем варианте описания предметной области.')
BAResponse(ba_text='В вашем описании предметной области было найдено 5 user-историй.')
BAResponse(ba_text='Начнём уточнять возможные сценарии по каждой user-истории.')
BAResponse(ba_text='Сейчас будем уточнять сценарии для user-истории 0: Пользователь принимает заказы через веб-сервис для дальнейшего управления ими.')
BAResponse(ba_text='1. Пользователь входит в систему под своей учетной записью.\n2. Пользователь переходит в раздел "Новые заказы".\n3. Пользователь просматривает поступившие новые заказы.\n4. Пользователь выбирает заказ из списка новых заказов.\n5. Пользователь открывает детали выбранного заказа.\n6. Пользователь подтверждает получение заказа или отклоняет его.\n7. Если заказ подтвержден, он перемещается в статус "Принят" и становится доступным для дальнейших операций (например, назначение исполнителя).\n8. Если заказ отклонен, пользователь указывает причину отклонения, после чего заказ помечается как отклоненный и недоступен для дальнейшей обработки.\n9. Пользователь может фильтровать и сортировать заказы по различным критериям (дата поступления, тип услуги, исполнитель и т.д.).\n10. Пользователь получает уведомления о новых заказах различными способами (по электронной почте, push-уведомлениями).')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='1. Пользователь входит в систему под своей учетной записью.\n2. Пользователь переходит в раздел "Текущие заказы".\n3. Пользователь просматривает активные заказы, находящиеся в обработке.\n4. Пользователь выбирает конкретный активный заказ из списка.\n5. Пользователь открывает детали выбранного активного заказа.\n6. Пользователь назначает ответственного сотрудника или изменяет назначенного ранее.\n7. Пользователь обновляет статус заказа (например, переводит из статуса "Назначено" в статус "Выполняется").\n8. Пользователь добавляет комментарии или прикрепляет файлы к заказу при необходимости.\n9. Пользователь отслеживает прогресс выполнения заказа через обновления статуса и отчеты исполнителей.\n10. Пользователь имеет возможность отменить выполнение заказа с указанием причины отмены, если это требуется.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='1. Пользователь входит в систему под своей учетной записью.\n2. Пользователь переходит в раздел "История заказов".\n3. Пользователь просматривает завершенные или отмененные заказы.\n4. Пользователь выбирает конкретный завершённый или отменённый заказ из истории.\n5. Пользователь открывает детали выбранного заказа.\n6. Пользователь оценивает качество исполнения заказа (если применимо), оставляя отзыв или рейтинг исполнителю.\n7. Пользователь экспортирует информацию о заказе в формате PDF или Excel для отчётности или архивации.\n8. Пользователь использует фильтры и поисковые запросы для быстрого нахождения нужного заказа среди большого количества записей.\n9. Пользователь получает доступ к аналитике по выполненным заказам (количество выполненных заказов, средняя оценка качества услуг и др.) для оценки эффективности работы сервиса.\n10. Пользователь может восстановить случайно удалённые или ошибочно закрытые заказы, вернув их обратно в рабочий процесс.')
UserResponse(user_text=None, signal=<ResponseSignal.continue_operation: 1>)
BAResponse(ba_text='Сейчас будем уточнять сценарии для user-истории 1: Пользователь обрабатывает принятые заказы на веб-сервисе.')
BAResponse(ba_text='Пользователь получает уведомление о новом заказе через электронную почту или push-уведомление. Пользователь переходит на страницу обработки заказов на веб-сервисе, где видит новый заказ в списке ожидающих обработки. Пользователь открывает детали заказа для проверки информации: наименование товара, количество, адрес доставки, контактные данные клиента. После подтверждения правильности данных пользователь переводит статус заказа из "ожидающего" в "обрабатываемый". Затем он назначает ответственного сотрудника для выполнения заказа и устанавливает срок исполнения. По завершении всех необходимых процедур пользователь изменяет статус заказа на "выполненный", после чего клиент уведомляется о готовности его заказа.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Пользователь получает уведомление о новом заказе через SMS-сообщение. Пользователь авторизуется на веб-сервисе и находит новый заказ в разделе "Новые заказы". Он просматривает информацию о заказе: тип услуги, стоимость, сроки выполнения, особые пожелания клиента. Если все данные корректны, пользователь подтверждает принятие заказа и переводит его в состояние "Принят". Далее он выбирает исполнителя из списка доступных сотрудников, учитывая их загруженность и квалификацию. После выбора исполнителя пользователю предоставляется возможность установить промежуточные контрольные точки выполнения заказа. Когда исполнитель завершает выполнение заказа, пользователь проверяет результат работы и при необходимости запрашивает доработки у исполнителя. После окончательного одобрения пользователь меняет статус заказа на "Завершено", а клиент информируется о выполнении заказа посредством email или телефонного звонка.')
UserResponse(user_text='Да', signal=None)
BAResponse(ba_text='Пользователь получает уведомление о новом заказе через мобильное приложение. Пользователь открывает раздел "Необработанные заказы" и выбирает нужный заказ из списка. Просматривая детализацию заказа — название продукта, цену, условия оплаты, дату поставки и контактную информацию покупателя, пользователь может сразу же связаться с клиентом через встроенную систему чата приложения для уточнения деталей. Подтверждая правильность предоставленных сведений, пользователь присваивает заказу статус "На обработке". Затем он распределяет задачу среди команды исполнителей, указывая конкретные задачи каждому сотруднику и устанавливая дедлайны. Во время выполнения заказа пользователь отслеживает прогресс каждого этапа через панель мониторинга. Как только все этапы завершены успешно, пользователь обновляет статус заказа на "Готово" и отправляет клиенту подтверждение завершения заказа вместе со ссылкой на форму оценки качества обслуживания.')
UserResponse(user_text=None, signal=<ResponseSignal.next_stage: 0>)
BAResponse(ba_text='Извлекаем роли.')
BAResponse(ba_text='В вашем описании предметной области было найдено 2 ролей.')
BAResponse(ba_text='Извлекаю функциональные требования')
BAResponse(ba_text='В вашем описании предметной области было найдено 41 функциональных требований.')
BAResponse(ba_text='Извлекаем нефункциональные требования')
BAResponse(ba_text='В вашем описании предметной области было найдено 44 нефункциональных требований.')

# Первичный список требований

## Функциональные требования

* Система должна предоставлять возможность пользователю входить в систему под своей учетной записью. (ФТ0.1.0)
* После входа система предоставляет доступ к разделу "Новые заказы", где отображаются все не обработанные ранее заказы. (ФТ0.1.1)
* Пользователь должен иметь возможность просмотра всех поступивших новых заказов. (ФТ0.1.2)
* Пользователь имеет возможность выбора конкретного заказа из списка новых заказов. (ФТ0.1.3)
* По выбору заказа система показывает детальную информацию об этом заказе. (ФТ0.1.4)
* Пользователь может подтвердить получение заказа или отклонить его. (ФТ0.1.5)
* Подтвержденный заказ автоматически переводится системой в статус "Принят" и доступен для последующих действий (назначение ответственного сотрудника и др.). (ФТ0.1.6)
* Отклонённый заказ фиксируется системой с указанием причины отказа пользователем и больше недоступен для обработки. (ФТ0.1.7)
* Пользователю предоставляется возможность фильтрации и сортировки заказов по таким параметрам, как дата поступления, тип товара, ответственный сотрудник и другие критерии. (ФТ0.1.8)
* Система уведомляет пользователя о появлении нового заказа через электронную почту и/или push-уведомления. (ФТ0.1.9)
* Система должна обеспечивать вход пользователя в систему под его уникальной учетной записью. (ФТ0.2.0)
* После входа пользователь должен иметь доступ к разделу "Текущие заказы", где отображаются все активные заказы, находящиеся в обработке. (ФТ0.2.1)
* Пользователь должен иметь возможность просмотра подробностей каждого активного заказа, включая текущие статусы обработки и ответственную сторону. (ФТ0.2.2)
* Пользователь должен иметь возможность выбора конкретного активного заказа из общего списка активных заказов. (ФТ0.2.3)
* Пользователь должен иметь возможность назначения ответственного сотрудника за выбранный заказ либо изменения уже назначенного сотрудника. (ФТ0.2.4)
* Пользователь должен иметь возможность изменять текущий статус заказа среди доступных вариантов ("Назначено", "Выполняется", "Завершено", "Отменен") и видеть историю изменений статуса. (ФТ0.2.5)
* Пользователь должен иметь возможность добавления комментариев и файлов к деталям заказа. (ФТ0.2.6)
* Пользователь должен получать актуальные данные о прогрессе выполнения заказа посредством регулярных отчетов от исполнителя и обновлений статуса. (ФТ0.2.7)
* Пользователь должен иметь возможность отменять выполнение заказа с обязательным указанием причин такой отмены. (ФТ0.2.8)
* Система должна сохранять всю историю действий пользователя над каждым заказом, включая назначение сотрудников, изменение статусов и добавление комментариев и файлов. (ФТ0.2.9)
* Система должна отправлять пользователю уведомление о новом заказе посредством электронной почты или push-уведомления. (ФТ1.1.0)
* Пользователь должен иметь возможность перейти на страницу обработки заказов на веб-сервисе непосредственно из полученного уведомления. (ФТ1.1.1)
* На странице обработки заказов система должна отображать новые заказы в статусе "Ожидающий". (ФТ1.1.2)
* Пользователь должен иметь возможность открыть детальную информацию о заказе, включая наименование товара, количество, адрес доставки и контактные данные клиента. (ФТ1.1.3)
* Пользователь должен иметь возможность подтвердить правильность данных заказа перед началом его обработки. (ФТ1.1.4)
* Система должна позволять пользователю изменять статус заказа с "Ожидающий" на "Обрабатываемый". (ФТ1.1.5)
* Пользователь должен иметь возможность назначить ответственного сотрудника для выполнения заказа. (ФТ1.1.6)
* Пользователь должен иметь возможность установить срок исполнения заказа. (ФТ1.1.7)
* После завершения всех необходимых процедур пользователь должен иметь возможность изменить статус заказа на "Выполненный". (ФТ1.1.8)
* Система должна автоматически уведомлять клиента о готовности его заказа при изменении статуса на "Выполненный". (ФТ1.1.9)
* Система должна отправлять пользователям уведомления о новых заказах через SMS-сообщения. (ФТ1.2.0)
* Авторизированный пользователь должен иметь доступ к разделу "Новые заказы". (ФТ1.2.1)
* Пользователь должен видеть подробную информацию о каждом новом заказе, включая тип услуги, стоимость, сроки выполнения и особые пожелания клиента. (ФТ1.2.2)
* Пользователь должен иметь возможность подтвердить принятие нового заказа и перевести его в состояние "Принят". (ФТ1.2.3)
* Пользователь должен выбирать исполнителя из списка доступных сотрудников, основываясь на их текущей загрузке и квалификации. (ФТ1.2.4)
* Пользователю должна быть предоставлена возможность устанавливать промежуточные контрольные точки выполнения заказа. (ФТ1.2.5)
* Исполнитель должен уведомляться системой о том, что ему назначен заказ. (ФТ1.2.6)
* По завершении исполнения заказа исполнителем, система должна предоставить пользователю возможность проверки результатов выполненной работы. (ФТ1.2.7)
* Пользователь должен иметь возможность запросить доработки у исполнителя, если результаты не соответствуют ожиданиям. (ФТ1.2.8)
* После окончательной проверки и утверждения выполненных работ пользователем, система должна автоматически менять статус заказа на "Завершено". (ФТ1.2.9)
* Клиент должен получать уведомление о завершении заказа через email или телефонный звонок. (ФТ1.2.10)

## Ограничения

* Система должна обеспечивать высокую доступность сервиса для работы с заказами 24 часа в сутки, 7 дней в неделю. (НФТ0.1.0)
* Интерфейс системы должен быть интуитивно понятным и удобным для пользователя любого уровня подготовки. (НФТ0.1.1)
* Время отклика интерфейса при выполнении действий пользователем не должно превышать 3 секунд. (НФТ0.1.2)
* Система должна поддерживать одновременную работу нескольких пользователей без потери производительности. (НФТ0.1.3)
* Данные должны храниться безопасно и соответствовать требованиям законодательства РФ по защите персональных данных. (НФТ0.1.4)
* Реализация уведомлений должна предусматривать возможность выбора способа получения уведомлений пользователем (электронная почта, push-уведомления). (НФТ0.1.5)
* Фильтрация и сортировка заказов должна выполняться быстро даже при большом объеме данных. (НФТ0.1.6)
* Все действия пользователей в системе должны логироваться для обеспечения возможности аудита и восстановления событий. (НФТ0.1.7)
* Требуется поддержка различных браузеров (Chrome, Firefox, Safari, Edge), используемых пользователями. (НФТ0.1.8)
* Необходимо обеспечить масштабируемость системы для поддержки роста количества обрабатываемых заказов и числа пользователей. (НФТ0.1.9)
* Система должна обеспечивать высокую доступность сервиса для работы с текущими заказами 24 часа в сутки, 7 дней в неделю. (НФТ0.2.0)
* Интерфейс системы должен быть интуитивно понятен и удобен для пользователя любого уровня подготовки. (НФТ0.2.1)
* Время отклика интерфейса не должно превышать 3 секунд при выполнении операций просмотра, выбора и изменения данных о заказе. (НФТ0.2.2)
* Система должна поддерживать одновременную работу нескольких пользователей без потери производительности и возникновения конфликтов доступа. (НФТ0.2.3)
* Реализация функционала назначения сотрудников и изменения статуса заказа должна исключать ошибки дублирования действий и потерю информации. (НФТ0.2.4)
* Все действия пользователей должны фиксироваться системой с возможностью последующего аудита и восстановления истории изменений. (НФТ0.2.5)
* Файлы, прикрепляемые пользователями к заказам, должны поддерживаться форматы PDF, DOC(X), XLS(X), JPG/PNG/GIF размером до 10 МБ каждый. (НФТ0.2.6)
* Объем хранимых файлов и комментариев к каждому заказу ограничен 50 МБ суммарно. (НФТ0.2.7)
* Для обеспечения безопасности система должна использовать HTTPS-протокол и шифрование передаваемых данных. (НФТ0.2.8)
* Доступ к системе должен осуществляться только авторизованным пользователям с соответствующими правами доступа. (НФТ0.2.9)
* Возможность отмены заказа должна сопровождаться обязательным вводом комментария с причиной отмены пользователем. (НФТ0.2.10)
* Отчеты о прогрессе выполнения заказов должны предоставляться пользователю в удобном формате (HTML, Excel). (НФТ0.2.11)
* Система должна обеспечивать возможность отправки уведомлений пользователям как посредством электронной почты, так и через push-уведомления. (НФТ1.1.0)
* Интерфейс пользователя должен быть интуитивно понятен и удобен для работы с заказами. (НФТ1.1.1)
* Время отклика системы при переходе на страницу обработки заказов не должно превышать 3 секунд. (НФТ1.1.2)
* Страница обработки заказов должна поддерживать фильтрацию и сортировку заказов по различным критериям (например, дате поступления, статусу). (НФТ1.1.3)
* Детали каждого заказа должны отображаться корректно и полностью без необходимости дополнительных действий со стороны пользователя. (НФТ1.1.4)
* Возможность изменения статуса заказа должна быть доступной только авторизованным сотрудникам с соответствующими правами доступа. (НФТ1.1.5)
* Назначение ответственного сотрудника и установление срока исполнения заказа должно происходить быстро и удобно. (НФТ1.1.6)
* Изменение статуса заказа на "выполненный" должно автоматически инициировать отправку уведомления клиенту о готовности заказа. (НФТ1.1.7)
* Все действия сотрудников по обработке заказов должны фиксироваться системой для последующего аудита и отчетности. (НФТ1.1.8)
* Система должна поддерживать интеграцию с внешними сервисами для отправки уведомлений клиентам (электронная почта, SMS). (НФТ1.1.9)
* Система должна обеспечивать отправку уведомлений пользователям не позднее 5 минут после изменения статуса заказа. (НФТ1.2.0)
* Интерфейс пользователя должен быть доступен круглосуточно без простоев. (НФТ1.2.1)
* Время отклика системы на действия пользователя не должно превышать 3 секунд. (НФТ1.2.2)
* Веб-сервис должен поддерживать одновременную работу минимум 100 активных пользователей. (НФТ1.2.3)
* Данные должны храниться в зашифрованном виде для обеспечения безопасности информации. (НФТ1.2.4)
* Доступ к системе должен осуществляться только после успешной аутентификации и авторизации пользователя. (НФТ1.2.5)
* Для каждого пользователя должна быть предусмотрена индивидуальная настройка интерфейса под свои задачи и предпочтения. (НФТ1.2.6)
* Должна быть реализована система резервного копирования данных с возможностью восстановления состояния системы на любой день последних трех месяцев. (НФТ1.2.7)
* Все операции с данными должны логироваться для последующего аудита действий пользователей. (НФТ1.2.8)
* Требуется поддержка различных браузеров (Chrome, Firefox, Safari, Edge). (НФТ1.2.9)
* Необходимо обеспечить поддержку мобильных устройств с экранами от 320px шириной и выше. (НФТ1.2.10)
* Скорость загрузки страниц сайта не должна превышать 5 секунд даже при низкой скорости интернета (до 1 Мбит/с). (НФТ1.2.11)

# Модели требований

## Модели пользователей системы

Виды пользователей:

* Пользователь
* клиент

## Функциональная модель

Сценарий 0.1
1. Пользователь входит в систему под своей учетной записью.
2. Пользователь переходит в раздел "Новые заказы".
3. Пользователь просматривает поступившие новые заказы.
4. Пользователь выбирает заказ из списка новых заказов.
5. Пользователь открывает детали выбранного заказа.
6. Пользователь подтверждает получение заказа или отклоняет его.
7. Если заказ подтвержден, он перемещается в статус "Принят" и становится доступным для дальнейших операций (например, назначение исполнителя).
8. Если заказ отклонен, пользователь указывает причину отклонения, после чего заказ помечается как отклоненный и недоступен для дальнейшей обработки.
9. Пользователь может фильтровать и сортировать заказы по различным критериям (дата поступления, тип услуги, исполнитель и т.д.).
10. Пользователь получает уведомления о новых заказах различными способами (по электронной почте, push-уведомлениями).

Сценарий 0.2
1. Пользователь входит в систему под своей учетной записью.
2. Пользователь переходит в раздел "Текущие заказы".
3. Пользователь просматривает активные заказы, находящиеся в обработке.
4. Пользователь выбирает конкретный активный заказ из списка.
5. Пользователь открывает детали выбранного активного заказа.
6. Пользователь назначает ответственного сотрудника или изменяет назначенного ранее.
7. Пользователь обновляет статус заказа (например, переводит из статуса "Назначено" в статус "Выполняется").
8. Пользователь добавляет комментарии или прикрепляет файлы к заказу при необходимости.
9. Пользователь отслеживает прогресс выполнения заказа через обновления статуса и отчеты исполнителей.
10. Пользователь имеет возможность отменить выполнение заказа с указанием причины отмены, если это требуется.

Сценарий 1.1
Пользователь получает уведомление о новом заказе через электронную почту или push-уведомление. Пользователь переходит на страницу обработки заказов на веб-сервисе, где видит новый заказ в списке ожидающих обработки. Пользователь открывает детали заказа для проверки информации: наименование товара, количество, адрес доставки, контактные данные клиента. После подтверждения правильности данных пользователь переводит статус заказа из "ожидающего" в "обрабатываемый". Затем он назначает ответственного сотрудника для выполнения заказа и устанавливает срок исполнения. По завершении всех необходимых процедур пользователь изменяет статус заказа на "выполненный", после чего клиент уведомляется о готовности его заказа.

Сценарий 1.2
Пользователь получает уведомление о новом заказе через SMS-сообщение. Пользователь авторизуется на веб-сервисе и находит новый заказ в разделе "Новые заказы". Он просматривает информацию о заказе: тип услуги, стоимость, сроки выполнения, особые пожелания клиента. Если все данные корректны, пользователь подтверждает принятие заказа и переводит его в состояние "Принят". Далее он выбирает исполнителя из списка доступных сотрудников, учитывая их загруженность и квалификацию. После выбора исполнителя пользователю предоставляется возможность установить промежуточные контрольные точки выполнения заказа. Когда исполнитель завершает выполнение заказа, пользователь проверяет результат работы и при необходимости запрашивает доработки у исполнителя. После окончательного одобрения пользователь меняет статус заказа на "Завершено", а клиент информируется о выполнении заказа посредством email или телефонного звонка.